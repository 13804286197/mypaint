#!/usr/bin/env python
#
# This file is part of MyPaint.
# Copyright (C) 2007 by Martin Renold <martinxyz@gmx.ch>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY. See the COPYING file for more details.

import gtk, sys, os, os.path
gdk = gtk.gdk

# autodetect prefix
# this allow relocatable version

#standard values
data='/share/mypaint'
lib='/lib/python%d.%d/site-packages/mypaint/' % (sys.version_info[0], sys.version_info[1])
pwd=os.getcwd()

if sys.argv != []:
	curdir=os.path.dirname(sys.argv[0])
else:
	curdir='.'

# script is installed as $prefix/bin. I just need $prefix to continue.
#dir_install=os.path.normpath(os.path.join(pwd,curdir)) # ????
dir_install=curdir # same, except maybe if curdir is relative

if os.path.basename(dir_install) == 'bin':
    prefix=os.path.dirname(dir_install)
    share=prefix+data
    sys.path.insert(0, prefix + lib)
    sys.path.insert(0, share + '/python')
else:
    # we are not installed, use .libs/mydrawwidget.so
    #sys.path.insert(0,'.libs')
    prefix=None
    share='.'
    # checking for import error below

try: # just for a nice error message
    from lib import mypaintlib
except ImportError, detail:
    print 'ImportError:', detail
    print "\nWe are not correctly installed or compiled!"
    print 'script = "%s"' % sys.argv[0]
    print 'dir_install = "%s"' % dir_install
    print "\nYou need to './configure && make' the C modules first.\n"
    if 'cannot import name' in str(detail).lower():
        print "Maybe try 'python mypaint' instead of './mypaint'.\n"
    sys.exit(1)

from gui import application

def main():

    def usage_exit():
        print sys.argv[0], '[OPTION]... [FILENAME]'
        print 'Options:'
        print '  -c /path/to/config   use this directory instead of ~/.mypaint/'
        print '  -p                   profile (debug only; simulate some strokes and quit)'
        sys.exit(1)

    homepath =  os.path.expanduser('~')
    if homepath == '~':
        confpath = os.path.join(prefix, 'UserData')
    else:
        confpath = os.path.join(homepath, '.mypaint/')

    filename = None
    profile = False

    args = sys.argv[1:]
    while args:
        if args[0] == '-c':
            confpath = args[1]
            args = args[2:]
        elif args[0] == '-p':
            args = args[1:]
            profile = True
        elif args[0].startswith('-'):
            usage_exit()
        else:
            if filename:
                print 'Cannot open more than one file!'
                sys.exit(2)
            filename = args[0]
            if not os.path.isfile(filename):
                print 'File', filename, 'does not exist!'
                sys.exit(2)
            args = args[1:]

    print 'confpath =', confpath
    app = application.Application(share, confpath, filename, profile)

    # Recent gtk versions don't allow changing those menu shortcuts by
    # default. <rant>Sigh. This very useful feature used to be the
    # default behaviour even in the GIMP some time ago. I guess
    # assigning a keyboard shortcut without a complicated dialog
    # clicking marathon must have totally upset the people coming from
    # windows.</rant>
    gtksettings = gtk.settings_get_default()
    gtksettings.set_property('gtk-can-change-accels', True)

    gtk.main()

if __name__ == '__main__':
    main()

