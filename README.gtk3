How to test the GTK3 code
=========================

As of 2013-03-20, MyPaint is being updated to support GObject-Introspection
and GTK3. Upstream support for PyGTK is going away, and we should be using the
newer GTK anyway given our heavy reliance on fancy input devices. It would be
nice to see some of the input-related bugs go away. The rough plan is:

1. [DONE] Update the Python code to support an internal pygtkcompat abstraction
   layer, which allows us to carry on using PyGTK while we maintain GTK2 code,
   while at the same time enabling us to port to PyGI+GTK3 via upstream's
   pygtkcompat module.

2. [DONE] In this state we can flip between GTK2 and GTK3 modes with compiler
   flags and runtime environment variables. Get the code running and fully
   tested under PyGI+GTK3, albeit via pygtkcompat. New code can be merged,
   but it must be compatible with both PyGTK-GTK2 and pygtkcompat-PyGI+GTK3
   in this state, using pygtk naming conventions and import blocks.

3. [ONGOING] Flip over to GTK3 by default, still using our abstraction layer.
   New code should be written for PyGI+GTK3.

4. [TODO] As and when, rip out our pygtkcompat abstractions and/or pygtkcompat
   itself and port individual modules to PyGI+GTK3.

As of writing, we are at stage 3. The status of this work is tracked in
https://gna.org/bugs/?19230


Prerequisites
-------------

Support for PyGTK < 2.18 has been discontinued. We need to be using the 2.24
API as described in https://live.gnome.org/PyGObject/IntrospectionPorting

======================  =======
Package                 Version
======================  =======
python-gi               3.2.2
python-gi-cairo         3.2.2
gir1.2-gtk-2.0          2.24.10
gir1.2-gtk-3.0          3.4.2
gir1.2-pango-1.0        1.30.0  
gir1.2-glib-2.0         1.32.0
gir1.2-gdkpixbuf-2.0    2.26.1
======================  =======

Packages and version numbers are guesstimates based on a working Ubuntu
Precise setup. YMMV.


Testing and porting to GTK3
---------------------------

We now build in GI+GTK3 mode by default, so if you want to build the binary
parts of MyPaint for GTK2 and PyGTK, you need to request it explicitly::

    $ cd path/to/mypaint-src
    $ scons enable_gtk3=no

Right now, our wrapper modules need be told to run in PyGTK mode as well: set
the environment variable "MYPAINT_ENABLE_GTK3" to "no" to do this.

    $ MYPAINT_ENABLE_GTK3=no ./mypaint

However, note that support for running like this will be dropped shortly.

