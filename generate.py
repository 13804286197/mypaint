#!/usr/bin/env python
"Code generator, part of the build process."
import os, sys

def writefile(filename, s):
    "write generated code if changed"
    s = 'DO NOT EDIT - autogenerated by ' + sys.argv[0] + '\n\n' + s
    if filename.endswith('.py'):
        s = '# ' + s
    else:
        s = '// ' + s
    if os.path.exists(filename) and open(filename).read() == s:
        print 'Checked', filename
    else:
        print 'Writing', filename
        open(filename, 'w').write(s)

result = '''
class BrushSetting:
    pass

settings = []

'''
index = 0
for statement in open('gtkmybrush.h').read().split('//%')[1:]:
    comment, declaration, trash = statement.split('\n', 2)
    cname = declaration.split()[-1].rstrip(';')
    fields = [s.strip() for s in comment.split('%')]
    result += 's = BrushSetting()\n'
    result += 's.cname   = "%s"\n' % cname
    result += 's.index   = %s\n'   % index
    result += 's.name    = "%s"\n' % fields[0]
    result += 's.flags   = "%s"\n' % fields[1]
    result += 's.min     = %s\n'   % fields[2]
    result += 's.default = %s\n'   % fields[3]
    result += 's.max     = %s\n'   % fields[4]
    result += 's.tooltip = "%s"\n' % fields[5]
    result += 'settings.append(s)\n\n'
    index += 1
    #print 'Parsed brush setting', cname

writefile('brushsettings.py', result);
import brushsettings # still warm ;-)

brush_set_settings = ''
brush_get_settings = ''
for s in brushsettings.settings:
    brush_set_settings += \
    '  if (id == %d) { b->%s = value; } else\n' % (s.index, s.cname)
    brush_get_settings += \
    '  if (id == %d) { return b->%s; } else\n' % (s.index, s.cname)

result = '''
void
gtk_my_brush_set_setting (GtkMyBrush * b, int id, float value)
{
''' + brush_set_settings + r'''
  {
    g_print ("brush_set_setting() with invalid id %d\n", id);
    g_assert (0);
  }
}

float
gtk_my_brush_get_setting (GtkMyBrush * b, int id)
{
''' + brush_get_settings + r'''
  {
    g_print ("brush_get_setting() with invalid id %d\n", id);
    g_assert (0);
    return 0;
  }
}
'''

writefile('gtkmybrush_settings.inc', result);
