# DO NOT EDIT - autogenerated by ./generate.py


class BrushSetting:
    pass

settings = []

s = BrushSetting()
s.cname   = "opaque"
s.index   = 0
s.name    = "opaque"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 1.0
s.max     = 1.0
s.tooltip = "0 means brush is transparent, 1 fully visible"
settings.append(s)

s = BrushSetting()
s.cname   = "radius_logarithmic"
s.index   = 1
s.name    = "radius"
s.flags   = "BSF_LOGARITHMIC"
s.min     = -0.5
s.default = 2.0
s.max     = 5.0
s.tooltip = "basic brush radius (logarithmic)\n 0.7 means 2 pixels\n 3.0 means 20 pixels"
settings.append(s)

s = BrushSetting()
s.cname   = "hardness"
s.index   = 2
s.name    = "hardness"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 1.0
s.max     = 1.0
s.tooltip = "hard brush-circle borders (setting to zero will draw nothing; it's not implemented like in GIMP, I haven't figured out yet)"
settings.append(s)

s = BrushSetting()
s.cname   = "dabs_per_basic_radius"
s.index   = 3
s.name    = "dabs per basic radius"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 5.0
s.tooltip = "dabs to draw while the pointer moves one brush radius"
settings.append(s)

s = BrushSetting()
s.cname   = "dabs_per_actual_radius"
s.index   = 4
s.name    = "dabs per actual radius"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 2.0
s.max     = 5.0
s.tooltip = "same as above, but the radius actually drawn is used, which might change dynamically"
settings.append(s)

s = BrushSetting()
s.cname   = "dabs_per_second"
s.index   = 5
s.name    = "dabs per second"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 80.0
s.tooltip = "dabs to draw each second, no matter how far the pointer moves"
settings.append(s)

s = BrushSetting()
s.cname   = "opaque_by_pressure"
s.index   = 6
s.name    = "opaque by pressure"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 1.0
s.max     = 5.0
s.tooltip = "opaque above will get multiplyed by pressure times this value\nFIXME: this is really useless and has the same effect as oppaque."
settings.append(s)

s = BrushSetting()
s.cname   = "radius_by_pressure"
s.index   = 7
s.name    = "radius by pressure"
s.flags   = "BSF_NONE"
s.min     = -10.0
s.default = 0.1
s.max     = 10.0
s.tooltip = "how much more pressure will increase the radius\nwithout pressure, the radius is unchanged\n 0.0 disable\n 0.7 double radius at full pressure\n-0.7 half radius at full pressure\n3.0 20 times radius at full pressure"
settings.append(s)

s = BrushSetting()
s.cname   = "radius_by_random"
s.index   = 8
s.name    = "radius by random"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "alter the radius randomly each dab\n 0.0 disable\n 0.7 biggest radius is twice as large as smallest\n 3.0 biggest radius 20 times as large as smallest"
settings.append(s)

s = BrushSetting()
s.cname   = "radius_by_speed"
s.index   = 9
s.name    = "radius by speed"
s.flags   = "BSF_NONE"
s.min     = -10.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "alter the radius depending on current speed; this is also affected by 'speed abs slowness' below, but not by 'speed slowness'"
settings.append(s)

s = BrushSetting()
s.cname   = "rbs__speedabs_slowness"
s.index   = 10
s.name    = "radius by speed: speed abs slowness"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "how slow to update the speed value\n0.0 change the radius immediatly as your speed changes"
settings.append(s)

s = BrushSetting()
s.cname   = "offset_by_random"
s.index   = 11
s.name    = "offset by random"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "add randomness to the position where the dab is drawn\n 0.0 disabled\n 1.0 standard derivation is one radius away (as set above, not the actual radius)"
settings.append(s)

s = BrushSetting()
s.cname   = "offset_by_speed"
s.index   = 12
s.name    = "offset by speed"
s.flags   = "BSF_NONE"
s.min     = -30.0
s.default = 0.0
s.max     = 30.0
s.tooltip = "change position depending on pointer speed\n= 0 disable\n> 0 draw where the pointer moves to\n< 0 draw where the pointer comes from"
settings.append(s)

s = BrushSetting()
s.cname   = "obs__speed_slowness"
s.index   = 13
s.name    = "offset by speed: speed slowness"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "use a short-term speed (0) or a long time average speed (big) for above"
settings.append(s)

s = BrushSetting()
s.cname   = "obs__speedabs_slowness"
s.index   = 14
s.name    = "offset by speed: speed abs slowness"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "how fast to adapt the absolut value of the speed (in contrast to the direction)"
settings.append(s)

s = BrushSetting()
s.cname   = "saturation_slowdown"
s.index   = 15
s.name    = "saturation slowdown"
s.flags   = "BSF_NONE"
s.min     = -1.0
s.default = 0.0
s.max     = 1.0
s.tooltip = "When painting black, it soon gets black completely. This setting controls how fast the final brush color is taken:\n 1.0 slowly\n 0.0 disable\n-1.0 even faster\nThis is nolinear and causes strange effects when it happens too fast. Set occupacy low enough to avoid this.\nFor example, a full-occupacy black stroke might get brighter over grey areas than over white ones."
settings.append(s)

s = BrushSetting()
s.cname   = "position_T"
s.index   = 16
s.name    = "slow position"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "Slowdown pointer tracking speed. 0 disables it, higher values remove more jitter in cursor movements. Useful for drawing smooth, comic-like outlines."
settings.append(s)

s = BrushSetting()
s.cname   = "position_T2"
s.index   = 17
s.name    = "slow position 2"
s.flags   = "BSF_NONE"
s.min     = 0.0
s.default = 0.0
s.max     = 10.0
s.tooltip = "Similar as above but at brushdab level (ignoring how much time has past, if brushdabs do not depend on time)"
settings.append(s)

